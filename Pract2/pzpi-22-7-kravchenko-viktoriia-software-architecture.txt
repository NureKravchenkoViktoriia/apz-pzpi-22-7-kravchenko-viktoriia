МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
 ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ
 


Кафедра «Програмна інженерія»
 



ЗВІТ
з практичної роботи №2
з дисципліни «Архітектура програмного забезпечення»
на тему «Архітектура відомих програмних систем»
 



 
Виконала:                                                           	              	Прийняв:
ст. гр. ПЗПІ-22-7                                    	       	     		Сокорчук І. П.
Кравченко В. А.







Харків 2025
1 ІСТОРІЯ ЗМІН


№ДатаВерсія звітуОпис змін та виправлень114.05.20250.1Створено розділ «Історія змін» та «Завдання»215.05.20250.1Створено розділ «Опис виконаної роботи»315.05.20250.1Створено розділ «Висновки»417.05.20250.1Створено «Додаток А», «Додаток Б»


















2 ЗАВДАННЯ


     Метою даного звіту є дослідження архітектури однієї з найбільш складних та масштабованих сучасних програмних систем – TikTok. У межах дослідження передбачається проведення аналізу архітектурного устрою системи, її функціональних та нефункціональних характеристик, підходів до масштабування, обробки великих обсягів мультимедійного контенту, а також особливостей взаємодії клієнтської частини з серверною інфраструктурою.
     Основними завданнями даної роботи є:
     1. Вивчення загальної архітектури програмної системи TikTok, зокрема розмежування функціональних модулів, способів організації мікросервісної взаємодії, структури клієнт-серверної моделі, використання хмарних сервісів і обчислень.
     2. Ідентифікація технологічного стеку, що використовується у TikTok, з метою аналізу рішень, прийнятих при розробці компонентів для роботи з відео, потокової передачі даних, рекомендаційних систем, штучного інтелекту, баз даних та масштабування системи.
     3. Оцінка архітектурних рішень, спрямованих на забезпечення високої доступності, стійкості до збоїв, продуктивності, безперервної доставки нових функцій та обслуговування мільйонів користувачів у реальному часі.
     4. Аналіз підходів до реалізації рекомендаційного алгоритму, який є основною конкурентною перевагою TikTok. Особлива увага приділяється принципам побудови моделей машинного навчання, обробки поведінкових даних користувачів та їх впливу на архітектуру.
     5. Розгляд механізмів зберігання та обробки мультимедійного контенту, зокрема відео великого обсягу, їх оптимізації, кешування, розподіленого зберігання та доступу.
     6. Аналіз безпекових механізмів та захисту персональних даних, що реалізовані у системі, включаючи шифрування, автентифікацію, контроль доступу, а також відповідність вимогам різних міжнародних стандартів і законодавств (наприклад, GDPR).
     У ході дослідження буде також здійснено порівняння із загальноприйнятими підходами в архітектурі програмного забезпечення, а також виявлено унікальні рішення, що застосовані у TikTok для забезпечення його високої ефективності та популярності серед користувачів.
     Таким чином, завданням даної роботи є комплексний аналіз архітектурних принципів та рішень, що лежать в основі роботи програмної системи TikTok, з метою формування глибокого розуміння особливостей побудови масштабованих, високопродуктивних та стійких до збоїв інформаційних систем нового покоління.

















3 ОПИС ВИКОНАНОЇ РОБОТИ


     TikTok - сервіс для створення та перегляду коротких відео, що належить китайській компанії ByteDance. Запущена 2017 року міжнародна версія є провідною відеоплатформою для коротких відео в Китаї і стає дедалі популярнішою в інших країнах, ставши одним із застосунків, які найшвидше зростають і завантажуються.
     Програмна система TikTok є прикладом складного, розподіленого, масштабованого мультимедійного застосунку, що обробляє значні обсяги даних у режимі реального часу. Архітектура TikTok реалізована з використанням мікросервісної моделі, що забезпечує розділення функціональності на автономні, незалежно масштабовані сервіси, а також клієнт-серверну структуру, у якій фронт-енд застосунку взаємодіє з серверною логікою через API.
     Архітектурний стиль:
     TikTok побудовано на основі мікросервісної архітектури, що передбачає логічне та фізичне розділення програмної системи на низку сервісів, кожен з яких відповідає за конкретну функцію: обробка відео, стрічка рекомендацій, коментарі, аналітика, реклама, обробка запитів до профілю тощо. Таке рішення дозволяє:
     • ізолювати помилки в окремих компонентах без впливу на всю систему;
     • масштабувати лише ті частини системи, які потребують високої обчислювальної потужності;
     • пришвидшити розробку і розгортання оновлень.
     Мікросервіси TikTok взаємодіють між собою через чітко визначені API, найчастіше RESTful або gRPC, що забезпечує стандартизований обмін даними. Для забезпечення надійності комунікації застосовуються механізми повторних спроб, circuit breakers, а також централізоване логування і розподілений трейсинг, що дозволяє відслідковувати роботу системи в реальному часі.
     Важливою складовою є система service discovery, яка автоматично виявляє доступні сервіси в кластері, що особливо актуально при масштабуванні і оновленні окремих компонентів.
     Функціональні модулі:
     У рамках вивчення функціональної структури TikTok було визначено ключові логічні модулі, зокрема:
     • Клієнтський додаток (мобільний та вебінтерфейс), що відповідає за взаємодію з користувачем, відтворення відео, збір поведінкових даних.
     • Серверна частина, що реалізує бізнес-логіку, обробку запитів, рекомендаційний механізм, управління контентом.
     • Модуль авторизації та автентифікації — відповідає за вхід користувачів, інтеграцію з соціальними мережами, двофакторну автентифікацію та керування сесіями.
     • Модуль управління контентом — забезпечує завантаження, збереження, обробку відео, додавання описів, хештегів, міток, застосування фільтрів та ефектів.
     • Модуль рекомендацій — реалізує основну логіку персоналізації стрічки відео на основі машинного навчання.
     • Модуль коментарів та взаємодії — обробляє коментарі, позначки «подобається», підписки, повідомлення.
     • Модуль аналітики — збирає дані про перегляди, поведінкову активність користувача, конверсії для подальшого аналізу.
     • Модуль реклами та монетизації — відповідає за таргетинг, доставку рекламного контенту та аналіз результативності кампаній.
     Клієнт-серверна модель:
     Клієнтська частина TikTok реалізована як мобільний застосунок, що запускається на платформах Android та iOS, а також існує веб-версія системи. Вся логіка обробки даних зосереджена на серверній частині. Клієнт слугує інтерфейсом для введення даних, перегляду контенту та взаємодії з іншими користувачами.
     Комунікація між клієнтом і сервером здійснюється через захищені API-запити (HTTPS). Більшість запитів – асинхронні, що дозволяє не блокувати інтерфейс користувача під час завантаження відео або підрахунку взаємодій.
     Хмарна інфраструктура та обчислення:
     TikTok використовує хмарну інфраструктуру для розгортання серверної частини. Відомо, що TikTok (через компанію ByteDance) застосовує гібридну модель, комбінуючи власні дата-центри з потужностями хмарних провайдерів (наприклад, Google Cloud, AWS, Oracle Cloud у США).
     Основні переваги хмарного середовища:
     • Автоматичне масштабування серверів при зміні навантаження.
     • Балансування навантаження на основі географічного розташування користувачів.
     • Резервне зберігання великих обсягів відеоконтенту.
     • Обробка потокових даних (real-time streaming) через серверless- або container-based інфраструктуру (Docker, Kubernetes) для управління життєвим циклом мікросервісів, що підвищує гнучкість розгортання і підтримки системи.
     Окремі задачі, зокрема обробка відео (рендеринг, трансформування), виконуються у виділених обчислювальних середовищах, оптимізованих для роботи з великими обсягами мультимедійних даних.
     Таким чином, загальна архітектура TikTok є складною розподіленою системою, побудованою на мікросервісах із чітким розмежуванням функціональних модулів, що взаємодіють через стандартизовані API в рамках клієнт-серверної моделі з використанням сучасних хмарних технологій для забезпечення масштабованості, надійності та високої продуктивності.
     
     Ідентифікація технологічного стеку, що використовується у TikTok:
     У рамках дослідження архітектури TikTok було ідентифіковано основні технології, що застосовуються у розробці та підтримці різних функціональних підсистем. Технологічний стек TikTok характеризується гнучкістю, високою масштабованістю та здатністю обробляти великі обсяги відео, потокових даних і поведінкової аналітики в реальному часі.
     Компоненти для роботи з відео:
     TikTok підтримує обробку мільйонів одиниць мультимедійного контенту щоденно. Для реалізації обробки, трансформації та оптимізації відео використовуються такі інструменти:
     • FFmpeg — фреймворк для обробки відео (транскодування, обрізання, зменшення роздільної здатності, накладення ефектів).
     • OpenCV — бібліотека комп’ютерного зору, застосовується для фільтрації зображення, розпізнавання облич та об’єктів.
     • MediaPipe — фреймворк від Google, який використовується для AR-фільтрів, трекінгу жестів, анімації та ефектів у реальному часі.
     • H.264 / H.265 — стандарти стиснення відео, що використовуються TikTok для оптимізації відеофайлів під мобільні мережі.
     • Google Cloud Transcoder API або AWS Elemental MediaConvert — сервіси хмарного транскодування, які можуть використовуватись для перетворення та масштабування відео для розподіленої доставки.
     Потокова передача даних:
     Система TikTok реалізує потокову передачу відео, включно з трансляціями в реальному часі. Технології, що використовуються:
     • RTMP (Real-Time Messaging Protocol) — основний протокол для завантаження відео на сервер.
     • HLS (HTTP Live Streaming) — використовується для розповсюдження контенту користувачам.
     • CDN (Content Delivery Network) — TikTok має власну інфраструктуру кешування (ByteDance CDN), а також співпрацює з провайдерами (Akamai).
     • WebRTC — використовується для прямої (peer-to-peer) відеотрансляції у реальному часі.
     • Kafka — використовується не тільки для потокової передачі повідомлень, а й для логування, телеметрії та стрімінгу даних користувацької взаємодії.
     • Apache Flink — застосовується для обробки потоків даних у реальному часі та аналітики.
     Рекомендаційна система:
     TikTok реалізує складну двоетапну систему рекомендацій:
     1. Етап добору кандидатів (Candidate Generation): виконується фільтрація великої кількості відео за базовими критеріями.
     2. Етап ранжування (Ranking): застосовується глибоке машинне навчання для вибору найбільш релевантних відео.
     Технології:
     • TensorFlow / PyTorch — основні фреймворки для розробки моделей.
     • BERT та інші трансформерні архітектури — застосовуються для аналізу описів, хештегів, текстів коментарів.
     • Graph Neural Networks (GNN) — моделі для аналізу соціальних взаємозв’язків, враховуючи взаємодію користувачів (вподобання, підписки, коментарі).
     • LSTM / GRU — моделі для аналізу часових послідовностей переглядів.
     • Apache Spark + Kafka Streams — для обробки поведінкових даних у реальному часі.
     Штучний інтелект:
     TikTok реалізує численні AI-компоненти, зокрема для обробки відео, аудіо та тексту:
     • OpenCV + MediaPipe — використовуються для комп’ютерного зору, AR-фільтрів, розпізнавання жестів, трекінгу облич.
     • HuggingFace Transformers / BERT — для обробки природної мови (аналіз коментарів, розуміння змісту відео).
     • AI Alive (власна система TikTok) — фреймворк для генеративного ШІ, включно з голосовими моделями та синтезом зображень.
     • Recommendation AI + Personalization Layer — інтеграція моделей, що адаптують стрічку у реальному часі згідно з поточними реакціями користувача.
     Бази даних:
     TikTok використовує гібридну систему баз даних, оптимізовану для читання/запису у режимі реального часу:
     • MySQL / PostgreSQL — реляційні БД для зберігання метаданих, профілів, налаштувань.
     • Redis — система in-memory кешування для сесій, токенів авторизації, короткочасних даних.
     • Apache Cassandra — для масштабованого горизонтального зберігання великих обсягів відео-метаданих.
     • ElasticSearch — для реалізації пошуку за ключовими словами, тегами, фільтрами.
     • Apache Hive / Presto / ClickHouse — для побудови складних аналітичних запитів (OLAP-навантаження).
     • Apache Kafka + Flink — основа для обробки подій та метаданих у потоковому режимі.
     Масштабування системи:
     TikTok оперує у глобальному масштабі з понад 1 мільярдом користувачів. Технології, що забезпечують стабільність і масштабування:
     • Docker — контейнеризація кожного мікросервісу.
     • Kubernetes — автоматичне масштабування, самовідновлення сервісів, розгортання.
     • Apache Mesos — може використовуватись у внутрішній інфраструктурі ByteDance для оркестрації кластерів.
     • Prometheus + Grafana — моніторинг стану системи, продуктивності, обробки інцидентів.
     • Chaos Monkey / Chaos Engineering — тести на відмовостійкість, моделювання збоїв.
     • Service Mesh (наприклад, Istio) — контроль мережевих з'єднань між сервісами, шифрування, балансування трафіку.
     Технологічний стек TikTok побудовано з використанням передових інструментів та практик сучасного програмного забезпечення. Поєднання масштабованої мікросервісної архітектури, обробки відео в реальному часі, використання ШІ та великих даних забезпечує TikTok лідерство серед соціальних платформ за якістю персоналізації, продуктивністю та користувацьким досвідом.
     
     Оцінка архітектурних рішень, спрямованих на забезпечення високої доступності, стійкості до збоїв, продуктивності, безперервної доставки нових функцій та обслуговування мільйонів користувачів у реальному часі:
     Розглянемо ключові архітектурні рішення, що дозволяють TikTok стабільно функціонувати у масштабах мільйонів одночасних користувачів. Оцінка охоплює п’ять ключових аспектів: висока доступність (High Availability), стійкість до збоїв (Fault Tolerance), продуктивність (Performance), безперервна доставка (Continuous Delivery) та масштабованість у реальному часі (Real-Time Scalability).
     Висока доступність (High Availability):
     TikTok забезпечує безперервний доступ до своїх сервісів завдяки низці стратегічних рішень:
     • Розподілена архітектура: додаток побудований на мікросервісній архітектурі, де кожен сервіс виконує окрему функцію (відеообробка, рекомендації, облік лайків тощо), що дозволяє незалежно масштабувати або перезапускати частини системи без впливу на загальну доступність.
     • Multi-region деплоймент: TikTok розгорнуто у кількох географічних регіонах, що забезпечує стійкість до збоїв у конкретному дата-центрі. Використання глобальних CDN дозволяє локально кешувати відео для зменшення затримок.
     • Health Checks & Load Balancing: балансувальники навантаження (наприклад, NGINX або Envoy) періодично перевіряють стан мікросервісів і спрямовують трафік лише до здорових інстансів. Це знижує ймовірність простоїв для кінцевого користувача.
     Стійкість до збоїв (Fault Tolerance):
     TikTok реалізує ряд механізмів для автоматичного відновлення після збоїв:
     • Chaos Engineering: тестування системи на відмовостійкість через симуляцію збоїв. Наприклад, несподіване завершення роботи інстансу, вимкнення мережі, втрата доступу до БД тощо.
     • Резервне копіювання та відновлення: критичні дані регулярно зберігаються у реплікованих сховищах (наприклад, Cassandra, HDFS). Це дозволяє швидко відновлювати інформацію навіть після катастрофічних подій.
     • Circuit Breaker & Retry Mechanisms: мікросервіси використовують патерни “запобіжника” (Circuit Breaker) та повторних спроб (Retry), щоб уникнути каскадних збоїв у мережі під час перевантажень чи часткових відмов.
     Продуктивність (Performance):
     Забезпечення високої продуктивності є критичним для TikTok, оскільки відео споживається у режимі реального часу:
     • Індексація та кешування: часто використовувані дані (наприклад, профілі, трендові відео) кешуються в Redis для миттєвого доступу. Крім того, відео доставляється через CDN для мінімізації затримок.
     • Edge Computing: обробка частини запитів (наприклад, рекомендацій, аналітики) виконується ближче до користувача (на рівні краю мережі), що пришвидшує взаємодію з системою.
     • Паралельна обробка та стиснення відео: використання FFmpeg, OpenCV та апаратних прискорювачів дозволяє швидко обробляти великі відеофайли, стискаючи їх до оптимального розміру без втрати якості.
     • Масштабована аналітика: Apache Flink та Kafka дозволяють обробляти тисячі подій у режимі реального часу, що критично для систем рекомендацій і відстеження трендів.
     Безперервна доставка нових функцій (Continuous Delivery):
     TikTok забезпечує гнучкий та швидкий цикл розробки завдяки наступним практикам:
     • CI/CD-пайплайни: нові функції розгортаються автоматично через пайплайни з тестуванням, валідацією та канарейковими розгортаннями. Це дозволяє впроваджувати зміни поступово і з мінімальним ризиком.
     • Feature Toggles (прапорці функцій): дозволяють вмикати або вимикати функціональність для певних груп користувачів без необхідності перезапуску застосунку.
     • A/B тестування: перед глобальним впровадженням функції тестуються на підмножині аудиторії для збору аналітики та корекції поведінки моделі або UI/UX.
     • Rollback-механізми: у разі виявлення проблем — система може автоматично відкотитися до стабільної версії.
     Масштабованість у реальному часі (Real-Time Scalability):
     Система TikTok підтримує обслуговування мільйонів користувачів одночасно завдяки горизонтальному масштабуванню:
     • Контейнеризація та оркестрація: Усі мікросервіси упаковані у Docker-контейнери, а Kubernetes або Apache Mesos керують масштабуванням залежно від навантаження.
     • Автоматичне масштабування: використовуються autoscaler-и, що базуються на метриках CPU/RAM/трафіку, які дозволяють динамічно збільшувати кількість інстансів у пікові години (наприклад, вечірні перегляди у США та Азії).
     • Декомпозиція на області (sharding): дані та сервіси поділяються по регіонах та типах даних (наприклад, user-video, comments, reactions), що дозволяє обробляти запити паралельно без блокувань.
     • Використання CDN: забезпечує швидку доставку відео у будь-якій точці світу з мінімальними затримками.
     
     Аналіз підходів до реалізації рекомендаційного алгоритму, який є основною конкурентною перевагою TikTok:
     Загальна структура рекомендаційної системи:
     Рекомендаційна система TikTok побудована за двоетапною архітектурою, що складається з:
     • Етапу генерації кандидатів (Candidate Generation) — формується початковий список потенційно релевантних відео з великого пулу (до сотень мільйонів записів).
     • Етапу ранжування (Ranking) — відбувається глибокий аналіз сформованого списку з урахуванням поведінкових характеристик користувача.
     Особливістю TikTok є використання Deep Retrieval Model (DRM) на етапі генерації кандидатів. DRM працює за допомогою MLP (Multi-Layer Perceptron) із деревоподібною структурою та EM-алгоритму (Expectation-Maximization).
     Такий підхід дозволяє:
     • Зменшити час пошуку кандидатів до мілісекунд.
     • Підтримувати релевантність рекомендацій на рівні індивідуального користувача.
     
     Обробка поведінкових даних користувачів:
     TikTok обробляє значний обсяг поведінкових сигналів користувача:
     • Час перегляду відео (ключовий фактор)
     • Лайки, репости, коментарі
     • Взаємодія з профілями
     • Пошукові запити
     • Типи пристроїв, геолокація
     Час перегляду як ключовий сигнал: тривалість перегляду має більший вплив на ранжування, ніж просте відкриття відео. Наприклад:
     • Якщо відео переглянуто понад 90% часу — сигнал позитивного інтересу.
     • Якщо користувач пропускає відео <3 секунд — негативний сигнал.
     Усе це враховується у векторизації профілю користувача.
     Кожен елемент (відео, тег, профіль, дія) кодується у вигляді векторних представлень (embeddings), що дозволяє:
     • Враховувати семантичну близькість.
     • Масштабувати до мільйонів елементів..
     • Адаптувати систему до нових взаємодій.
     Архітектура моделей машинного навчання:
     TikTok застосовує гібридну ML-архітектуру, що включає:
     • DNN (Deep Neural Networks) — для прогнозу ймовірностей взаємодії
     • LSTM — для урахування послідовності дій користувача.
     • BERT (Transformer-based) — для розуміння семантики (наприклад, з описів відео).
     • Reinforcement Learning — для адаптивного налаштування рекомендацій у реальному часі.
     У трансформерах використовується Multi-Head Attention, що дозволяє:
     • Аналізувати різні типи взаємодій паралельно.
     • Враховувати як короткотерміновий, так і довготривалий контекст.
     • Покращити контекстуальне ранжування.
     Вплив на архітектуру системи:
     Рекомендаційна система TikTok побудована на основі масштабованої мікросервісної архітектури, що забезпечує високий рівень продуктивності, надійності та гнучкості. Основні компоненти цієї архітектури наведено нижче:
     • Apache Kafka — використовується як система черг повідомлень для обробки та передачі подій у реальному часі, що надходять від користувачів.
     • Redis — застосовується для кешування результатів обчислення рекомендацій, що дозволяє знизити навантаження на основні сервіси.
     • TensorFlow Serving — забезпечує розгортання моделей машинного навчання у виробничому середовищі (продакшн).
     • Kubernetes у поєднанні з Service Mesh (наприклад, Istio) — використовується для оркестрації мікросервісів, автоматичного масштабування, моніторингу, балансування навантаження та маршрутизації трафіку між сервісами.
     Особливу роль у розгортанні нових моделей і функціоналу відіграє A/B тестування, що дозволяє:
     • оцінювати вплив змін на ключові метрики залучення користувачів;
     • перевіряти гіпотези у контрольованому середовищі без негативного впливу на основну стрічку рекомендацій.
     Принципи персоналізації:
     TikTok реалізує адаптивну персоналізацію, що базується як на короткостроковому, так і на довгостроковому аналізі поведінки користувача:
     • Рекомендації на основі сеансу (session-based recommendations) — система формує персоналізовані пропозиції, навіть якщо користувач ще не має глибокої історії взаємодій. Це дозволяє надавати релевантний контент уже з перших хвилин використання застосунку.
     • Довгострокове моделювання (long-term user embeddings) — система формує векторні профілі користувачів на основі їхньої історії активності за тривалий період (від кількох тижнів до кількох місяців).
     Проблема холодного старту (cold start) вирішується за допомогою спеціалізованих технік:
     • Collisionless Hashing — механізм створення унікальних представлень для нових відео без конфлікту з уже наявними елементами у системі.
     • Аналіз контекстних ознак нового контенту (хештеги, звуковий супровід, метадані) для первинної генерації рекомендацій навіть за відсутності даних про взаємодію.
     Захист від маніпуляцій:
     Система TikTok включає розвинений модуль захисту від шахрайських дій та спроб маніпуляції алгоритмами персоналізації:
     • Виявлення бот-активності — включає виявлення аномальних шаблонів перегляду (наприклад, надто короткі або масові перегляди з однієї IP-адреси).
     • Adversarial Training — техніка навчання моделей з урахуванням потенційних атак, спрямованих на накручування показників (лайків, переглядів, поширень).
     • Паралельна система довіри — впроваджено незалежні метрики довіри для користувачів і контенту (user trust score, content trust score), що дозволяє знижувати вплив підозрілих дій на систему.
     Комплексне поєднання вищезазначених компонентів дозволяє TikTok досягати високого рівня персоналізації, гнучкості та утримання користувачів, що є ключовим фактором його глобального успіху.
     
     Розгляд механізмів зберігання та обробки мультимедійного контенту, зокрема відео великого обсягу, їх оптимізації, кешування, розподіленого зберігання та доступу:
     Сучасні мультимедійні платформи, такі як TikTok, працюють з величезним обсягом відеоконтенту, що надходить від користувачів у реальному часі. З огляду на масштаб даних, забезпечення ефективного зберігання, обробки, доставки та доступу до відео потребує використання високопродуктивних, масштабованих і розподілених технологічних рішень. 
     Архітектура зберігання відеоконтенту:
     TikTok реалізує розподілену систему зберігання, що дозволяє масштабувати збереження відео відповідно до географічного розташування користувачів і зростання обсягу даних. Основні компоненти цієї системи включають:
     • Об'єктне зберігання (Object Storage) — наприклад, сервіси типу Amazon S3 або Baidu BOS використовуються для зберігання відеофайлів у вигляді об’єктів із унікальними ідентифікаторами. Це дозволяє здійснювати гнучке масштабування, доступність та тривале зберігання без втрати продуктивності.
     • Географічно розподілені дата-центри — TikTok дублює дані у кількох регіонах світу для забезпечення швидкого доступу до відео, навіть при високому навантаженні або у разі виходу з ладу окремих вузлів.
     • Резервне копіювання — критично важливий контент резервується з використанням механізмів автоматичного дублювання, що відповідає принципам збереження надійності та відмовостійкості.
     Обробка відео: транскодування, оптимізація, адаптивне стрімінгування:
     Для зручності перегляду відео на різних пристроях TikTok реалізує багатоступеневу обробку відеоконтенту:
     • Транскодування відео — відразу після завантаження відео проходить конвертацію у кілька форматів (наприклад, H.264, H.265, VP9) та дозволів (240p, 480p, 720p, 1080p), що дозволяє оптимізувати потік для різних мережевих умов і пристроїв.
     • Адаптивне бітрейтове стрімінгування (Adaptive Bitrate Streaming) — завдяки використанню таких технологій, як HLS (HTTP Live Streaming) або MPEG-DASH, користувачу автоматично надається версія відео, що найкраще відповідає його поточній швидкості інтернету та роздільній здатності екрану.
     • Попереднє обчислення мініатюр (thumbnails) — під час обробки також створюються кадри попереднього перегляду, що зменшує навантаження на основний потік при навігації користувача у стрічці.
     Оптимізація зберігання та кешування:
     Для зменшення затримок і навантаження на основні сервери застосовуються різноманітні механізми оптимізації зберігання:
     • Кешування за запитом (on-demand caching) — відео кешується у точках присутності (PoP, Points of Presence) CDN (Content Delivery Network), коли до нього звертається користувач. Це дозволяє скорочувати час завантаження відео.
     • Кешування рекомендацій (Redis) — результати обчислення рекомендованих відео зберігаються у високошвидкісному in-memory сховищі Redis, що пришвидшує формування стрічки рекомендацій.
     • Контроль популярності відео (hot vs cold content) — відео з високим числом переглядів зберігаються у більш доступних кешах, тоді як малопопулярний контент переводиться у холодне зберігання.
     Технології доставки контенту (CDN):
     Для забезпечення швидкої та надійної доставки відео-контенту в TikTok використовується глобальна мережа доставки контенту (CDN). Основні особливості:
     • Інтеграція із внутрішнім CDN — ByteDance (розробник TikTok) має власну інфраструктуру CDN, оптимізовану під типові шаблони споживання відео в додатку.
     • Оптимізація маршрутизації — система обирає найближчий до користувача сервер для доставки відео, враховуючи мережеві умови, затримки та навантаження.
     • Паралельна передача фрагментів — забезпечує безперервний перегляд навіть при нестабільному з’єднанні, шляхом довантаження кількох сегментів одночасно.
     Масштабування системи зберігання:
     Оскільки обсяг відеоконтенту зростає експоненційно, TikTok реалізує динамічне горизонтальне масштабування. Це досягається за рахунок:
     • автоматичного додавання нових вузлів до кластерів зберігання у разі досягнення порогу завантаження;
     • використання шардінгу даних (розподілу відео по фрагментах), що дозволяє уникнути вузьких місць;
     • відстеження життєвого циклу контенту — система автоматично визначає, коли відео можна перемістити до архівного зберігання або видалити згідно з політикою конфіденційності.
     Безпека та доступ до відео:
     TikTok забезпечує захист відеоконтенту через:
     • контроль доступу на основі токенів — генерація тимчасових URL з обмеженим часом дії;
     • шифрування даних — як під час передачі (через HTTPS), так і при зберіганні;
     • відстеження підозрілої активності — наприклад, масового завантаження контенту або несанкціонованого доступу до відео з бот-акаунтів.
     TikTok використовує комплексну архітектуру для роботи з мультимедійним контентом великого обсягу, яка забезпечує ефективне зберігання, масштабування, кешування, адаптивну обробку і безпечну доставку відео. Завдяки розподіленим дата-центрам, високошвидкісному кешуванню, адаптивному стрімінгу та використанню CDN, система здатна обробляти мільярди запитів щодня з мінімальними затримками. Це створює передумови для безперервної роботи стрічки, високої якості користувацького досвіду та надійності системи загалом.
     
     Аналіз безпекових механізмів та захисту персональних даних, що реалізовані у системі, включаючи шифрування, автентифікацію, контроль доступу, а також відповідність вимогам різних міжнародних стандартів і законодавств (наприклад, GDPR):
     Загальна концепція безпеки даних:
     Система TikTok реалізує комплексну модель захисту інформації, що ґрунтується на багаторівневому підході до забезпечення безпеки даних користувачів. До її складу входять технічні, програмні та організаційні засоби захисту, які охоплюють усі етапи оброблення інформації — від збирання до зберігання, обміну та видалення персональних даних.
     Шифрування даних:
     Передача даних (транзит):
     Усі дані, що передаються між клієнтськими додатками TikTok і серверами платформи, шифруються за допомогою сучасного протоколу транспортного рівня — TLS версії 1.2 або 1.3. Це забезпечує захист даних від перехоплення або модифікації під час передачі мережею. Сертифікати шифрування регулярно оновлюються, а ключі проходять перевірку цілісності відповідно до процедур безперервного моніторингу.
     Зберігання даних (стан спокою):
     Персональні дані користувачів у стані спокою (тобто збережені на серверах або в хмарній інфраструктурі) шифруються за алгоритмом AES з довжиною ключа 256 біт, що відповідає рекомендаціям NIST (Національного інституту стандартів і технологій США). Управління ключами здійснюється через спеціалізовану систему управління ключами (KMS), яка забезпечує суворий контроль доступу, аудит доступу та регулярне ротаційне оновлення ключів.
     Автентифікація та ідентифікація користувачів:
     TikTok реалізує багаторівневі механізми автентифікації, серед яких:
     • Базова автентифікація через логін і пароль.
     • Двофакторна автентифікація (2FA) з використанням SMS-кодів або аутентифікаторів (наприклад, Google Authenticator).
     • Механізми протидії автоматизованому доступу (CAPTCHA).
     • Аутентифікація через сторонні сервіси із застосуванням протоколу OAuth 2.0 (Google, Facebook, Apple ID тощо).
     • Виявлення підозрілої активності при вході в обліковий запис — наприклад, спроби входу з невідомого пристрою чи країни спричиняють додаткову перевірку користувача.
     Усі події автентифікації логуються та передаються у централізовану систему моніторингу безпеки (SIEM) для подальшого аналізу.
     Контроль доступу та моніторинг:
     Контроль доступу у системі реалізовано з використанням принципів:
     • Ролевої моделі доступу (RBAC) — права доступу до ресурсів визначаються відповідно до ролі користувача.
     • Принципу найменших привілеїв (PoLP) — кожен користувач або компонент отримує лише ті права, які є необхідними для виконання поточних функцій.
     • Журналювання дій (audit logs) — всі запити доступу, зміни налаштувань, спроби отримання доступу до конфіденційних даних логуються для подальшого аналізу.
     • Захисту від DDoS-атак — TikTok використовує розподілену інфраструктуру доставки контенту (CDN) та засоби фільтрації трафіку, що дозволяє розподіляти навантаження та захищати основні вузли.
     • Систем виявлення вторгнень (IDS/IPS) та WAF (Web Application Firewall) для захисту вебінтерфейсів та API.
     Уся інформація передається до централізованої системи моніторингу інформаційної безпеки (SIEM), яка автоматично виявляє відхилення у поведінці користувачів і вразливості.
     Відповідність міжнародним стандартам та нормативно-правовим актам:
     TikTok офіційно декларує відповідність основним міжнародним нормативним актам у сфері захисту персональних даних:
     • General Data Protection Regulation (GDPR) — TikTok зобов’язаний забезпечувати прозорість, обмеження цілей оброблення, мінімізацію даних, збереження точності, обмеження терміну зберігання, цілісність і конфіденційність інформації. Однак, у 2025 році компанію оштрафовано на 530 мільйонів євро за порушення GDPR, зокрема — за передачу персональних даних європейських користувачів до Китаю, де рівень правового захисту даних не відповідає вимогам ЄС.
     • California Consumer Privacy Act (CCPA) — TikTok надає користувачам з США право на доступ, видалення та заборону продажу їхніх персональних даних.
     • Personal Information Protection Law (PIPL) — TikTok, що оперує на території Китаю, також враховує вимоги національного законодавства щодо захисту персональної інформації громадян КНР.
     • Проєкт Clover — започаткований у відповідь на тиск європейських регуляторів. Проєкт передбачає зберігання персональних даних громадян ЄС на локальних дата-центрах у межах Європейського Союзу з повним контролем європейських компаній над доступом до даних.
     • У Великій Британії у 2025 році відкрито розслідування стосовно законності оброблення персональних даних неповнолітніх користувачів TikTok, що може призвести до нових регуляторних обмежень.
     Загальний рівень безпеки та рекомендації:
     Згідно з незалежними дослідженнями, реалізовані механізми шифрування, автентифікації та контролю доступу відповідають сучасним рекомендаціям NIST, ISO/IEC 27001, OWASP ASVS. Водночас, ризики, пов’язані з юрисдикційною невизначеністю (Китай), обробленням даних неповнолітніх та недостатньою прозорістю, залишаються актуальними. Рекомендовано продовжити локалізацію обробки даних та розширити функції користувацького контролю над даними (зокрема, прозорість алгоритмів).
     
4 ВИСНОВКИ
     
     
     У ході виконання даної роботи було проведено комплексний аналіз архітектури програмної системи TikTok - однієї з найбільш складних та масштабованих сучасних платформ для розповсюдження коротких відео. Відповідно до поставлених завдань, досліджено ключові аспекти її архітектурного устрою, технологічного стеку, масштабування, обробки мультимедійного контенту, рекомендаційних алгоритмів та безпеки.
     Підсумовуючи результати, можна виділити такі основні висновки:
     1. Загальна архітектура TikTok базується на мікросервісній моделі, що забезпечує розподіл системи на автономні функціональні модулі з чітко визначеними обов’язками. Така архітектура сприяє гнучкості, масштабованості та незалежності розробки окремих компонентів, а також дозволяє ефективно організувати взаємодію між клієнтською частиною і серверною інфраструктурою через стандартизовані API.
     2. Технологічний стек системи включає сучасні інструменти для обробки відео (FFmpeg, OpenCV, GPU-акселерація), потокової передачі даних (RTMP, HLS, CDN), побудови рекомендаційних систем (TensorFlow, PyTorch, трансформерні моделі, графові нейронні мережі), а також розподілені бази даних (MySQL, Redis, Cassandra) і засоби масштабування (Docker, Kubernetes, Service Mesh). Це дозволяє TikTok обробляти величезні обсяги даних і забезпечувати стабільну роботу при мільярдній аудиторії.
     3. Архітектурні рішення спрямовані на високу доступність, продуктивність та стійкість до збоїв. Використання контейнеризації, автоматичного масштабування, розподілених кешів і CDN забезпечує безперервну роботу системи навіть при значних навантаженнях, а також швидке впровадження нових функцій.
     4. Рекомендаційний алгоритм TikTok є ключовою конкурентною перевагою платформи. Він реалізований за двоетапною моделлю - генерація кандидатів і точне ранжування - із застосуванням сучасних нейромережевих моделей, трансформерів, алгоритмів послідовного моделювання та графових нейронних мереж. Обробка великих обсягів поведінкових даних користувачів у реальному часі дозволяє забезпечити високу персоналізацію контенту і максимізувати залученість.
     5. Механізми зберігання та обробки мультимедійного контенту побудовані на розподілених об’єктних сховищах, географічному дублюванні даних, багатоступеневому транскодуванні і адаптивному стрімінгу. Використання кешування на CDN та in-memory базах даних дозволяє мінімізувати затримки і забезпечити високу якість відтворення відео.
     6. Безпекові механізми відповідають сучасним стандартам і законодавчим вимогам. Впроваджено багаторівневе шифрування даних, автентифікацію з мультифакторною перевіркою, контроль доступу за ролями, а також системи захисту від атак і витоків інформації. TikTok дотримується міжнародних норм, зокрема GDPR, CCPA та PIPL, що є важливою умовою його глобального функціонування.
     7. Проведений аналіз показав, що TikTok застосовує унікальні архітектурні рішення, які поєднують передові технології машинного навчання, розподілених систем і хмарних обчислень. Це дозволяє платформі залишатися однією з найбільш ефективних і популярних у світі, підтримуючи мільярдну аудиторію з високими вимогами до швидкості, надійності та персоналізації.
     Отже, дослідження архітектури TikTok підтвердило, що сучасні складні програмні системи вимагають інтеграції різноманітних технологічних підходів і ретельного балансування між функціональністю, масштабованістю та безпекою. Отримані знання можуть бути корисними для розробників і архітекторів програмного забезпечення, які працюють над створенням високопродуктивних і стійких до збоїв інформаційних систем нового покоління.























ДОДАТОК А
     Відеозапис доповіді на YouTube: https://youtu.be/hQ7fiHmbePo
      00:00 Вступ. 
     00:58 Архітектурний стиль. 
     01:59 Функціональні модулі. 
     03:01 Клієнт-серверна модель. 
     03:32 Хмарна інфраструктура та обчислення. 
     04:44 Ідентифікація технологічного стеку, що використовується у TikTok. 
     05:07 Компоненти для роботи з відео. 
     06:08 Потокова передача даних. 
     07:05 Рекомендаційна система. 
     08:19 Розгляд механізмів зберігання та обробки мультимедійного контенту, зокрема відео великого обсягу, їх оптимізації, кешування, розподіленого зберігання та доступу. 
     08:45 Архітектура зберігання відеоконтенту. 
     09:36 Обробка відео: транскодування, оптимізація, адаптивне стрімінгування. 
     10:22 Оптимізація зберігання та кешування. 
     11:02 Загальний рівень безпеки та рекомендації. 
     07:05 Висновок.









ДОДАТОК Б



Рисунок Б.1 – Титульний слайд


Рисунок Б.2 – Про TikTok



Рисунок Б.3 – Архітектурний стиль TikTok


Рисунок Б.4 – Функціональні модулі


Рисунок Б.5 – Клієнт-серверна модель


Рисунок Б.6 – Хмарна структура та обчислення


Рисунок Б.7 – Ідентифікація технологічного стеку, що використовується у TikTok


Рисунок Б.8 – Компоненти для роботи з відео TikTok


Рисунок Б.9 – Потокова передача даних


Рисунок Б.10 – Рекомендаційна система


Рисунок Б.11 – Розгляд механізмів зберігання та обробки мультимедійного контенту, зокрема відео великого обсягу, їх оптимізації, кешування, розподіленого зберігання та доступу




Рисунок Б.12 – Архітектура зберігання відеоконтенту 


Рисунок Б.13 – Обробка відео: транскодування, оптимізація, адаптивне стрімінгування


Рисунок Б.14 – Оптимізація зберігання та кешування


Рисунок Б.15 – Загальний рівень безпеки та рекомендації


Рисунок Б.16 – Висновок

